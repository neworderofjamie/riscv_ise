#include "{{title}}.h"

// Standard C includes
#include <cassert>
#include <cstring>

// RISC-V assembler includes
#include "assembler/xbyak_riscv.hpp"

// RISC-V ISE includes
#include "ise/riscv.h"

{% include 'macros.jinja' %}

using namespace Xbyak_riscv;

//----------------------------------------------------------------------------
// Anonymous namespace
//----------------------------------------------------------------------------
namespace
{
const std::vector<uint32_t> g_ScalarData{
{% filter wordwrap() %}
{% for m in mem_contents %}{{m}}, {% endfor %}};
{% endfilter %}
}

//----------------------------------------------------------------------------
// {{clean_title}}
//----------------------------------------------------------------------------
const std::vector<uint32_t> &{{clean_title}}::getScalarInitData()
{
    return g_ScalarData;
}
//----------------------------------------------------------------------------
CodeGenerator {{clean_title}}::generateCode()
{
    CodeGenerator c;
    {% filter indent(width=4) %}
{{test_code}}
    {% endfilter %}
    // End
    c.ecall();
    return c;
}
